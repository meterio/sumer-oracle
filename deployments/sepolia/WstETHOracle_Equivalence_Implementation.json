{
  "address": "0x487342815429814ECa7181b782829Ad4c838ff50",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wstETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "wETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "resilientOracleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "assumeEquivalence",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ASSUME_STETH_ETH_EQUIVALENCE",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESILIENT_ORACLE",
      "outputs": [
        {
          "internalType": "contract OracleInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STETH",
      "outputs": [
        {
          "internalType": "contract IStETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSTETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc69260b5a2b2dc65bdb78070cddc609a774e1867305461f4363ec4c372db78a0",
  "receipt": {
    "to": null,
    "from": "0x14b27D8DC12E59a9904DaC6d17D33B8de2E80e66",
    "contractAddress": "0x487342815429814ECa7181b782829Ad4c838ff50",
    "transactionIndex": 45,
    "gasUsed": "307264",
    "logsBloom": "0x
    "blockHash": "0x6be6b8c78ed90ee7ab717739ea6dc63f571b8183d5a1af16645e20269f67a5da",
    "transactionHash": "0xc69260b5a2b2dc65bdb78070cddc609a774e1867305461f4363ec4c372db78a0",
    "logs": [],
    "blockNumber": 6158521,
    "cumulativeGasUsed": "6216844",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9b87ea90fdb55e1a0f17fbeddcf7eb0ac4d50493",
    "0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9",
    "0xF5465B70Af90AEb26Aa13b1000a8CbEA53a5f4cf",
    "0x0A0855765C9777B44369e7aD65d2279b7F1F66A4",
    true
  ],
  "numDeployments": 1,
  "solcInputHash": "d54b43a0e9ac451a7aa45dae4945f5e5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wstETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resilientOracleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"assumeEquivalence\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ASSUME_STETH_ETH_EQUIVALENCE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESILIENT_ORACLE\",\"outputs\":[{\"internalType\":\"contract OracleInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STETH\",\"outputs\":[{\"internalType\":\"contract IStETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSTETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getPrice(address)\":{\"details\":\"Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH      or the price of stETH/USD (secondary market price) is obtained from the oracle\",\"params\":{\"asset\":\"Address of wstETH\"},\"returns\":{\"_0\":\"wstETH Price in USD scaled by 1e18\"}}},\"stateVariables\":{\"ASSUME_STETH_ETH_EQUIVALENCE\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"RESILIENT_ORACLE\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"STETH\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"WETH_ADDRESS\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"WSTETH_ADDRESS\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"title\":\"WstETHOracle\",\"version\":1},\"userdoc\":{\"errors\":{\"ZeroAddressNotAllowed()\":[{\"notice\":\"Thrown if the supplied address is a zero address where it is not allowed\"}]},\"kind\":\"user\",\"methods\":{\"ASSUME_STETH_ETH_EQUIVALENCE()\":{\"notice\":\"A flag assuming 1:1 price equivalence between stETH/ETH\"},\"RESILIENT_ORACLE()\":{\"notice\":\"Address of Resilient Oracle\"},\"STETH()\":{\"notice\":\"Address of stETH\"},\"WETH_ADDRESS()\":{\"notice\":\"Address of WETH\"},\"WSTETH_ADDRESS()\":{\"notice\":\"Address of wstETH\"},\"constructor\":{\"notice\":\"Constructor for the implementation contract.\"},\"getPrice(address)\":{\"notice\":\"Gets the USD price of wstETH asset\"}},\"notice\":\"Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH         or the price of stETH/USD (secondary market price) is obtained from the oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/WstETHOracle.sol\":\"WstETHOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/solidity-utilities/contracts/constants.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.25;\\n\\n/// @dev Base unit for computations, usually used in scaling (multiplications, divisions)\\nuint256 constant EXP_SCALE = 1e18;\\n\\n/// @dev A unit (literal one) in EXP_SCALE, usually used in additions/subtractions\\nuint256 constant MANTISSA_ONE = EXP_SCALE;\\n\\n/// @dev The approximate number of seconds per year\\nuint256 constant SECONDS_PER_YEAR = 31_536_000;\\n\",\"keccak256\":\"0x14de93ead464da249af31bea0e3bcfb62ec693bea3475fb4d90f055ac81dc5eb\",\"license\":\"BSD-3-Clause\"},\"@venusprotocol/solidity-utilities/contracts/validators.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\n/// @notice Thrown if the supplied address is a zero address where it is not allowed\\nerror ZeroAddressNotAllowed();\\n\\n/// @notice Thrown if the supplied value is 0 where it is not allowed\\nerror ZeroValueNotAllowed();\\n\\n/// @notice Checks if the provided address is nonzero, reverts otherwise\\n/// @param address_ Address to check\\n/// @custom:error ZeroAddressNotAllowed is thrown if the provided address is a zero address\\nfunction ensureNonzeroAddress(address address_) pure {\\n    if (address_ == address(0)) {\\n        revert ZeroAddressNotAllowed();\\n    }\\n}\\n\\n/// @notice Checks if the provided value is nonzero, reverts otherwise\\n/// @param value_ Value to check\\n/// @custom:error ZeroValueNotAllowed is thrown if the provided value is 0\\nfunction ensureNonzeroValue(uint256 value_) pure {\\n    if (value_ == 0) {\\n        revert ZeroValueNotAllowed();\\n    }\\n}\\n\",\"keccak256\":\"0xdb88e14d50dd21889ca3329d755673d022c47e8da005b6a545c7f69c2c4b7b86\",\"license\":\"BSD-3-Clause\"},\"contracts/interfaces/IStETH.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.25;\\n\\ninterface IStETH {\\n    function getPooledEthByShares(uint256 _sharesAmount) external view returns (uint256);\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x9e7ee12d63a84081722469719e046d6791a087f33ab40804ff1ff40ab859d4d3\",\"license\":\"BSD-3-Clause\"},\"contracts/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.25;\\n\\ninterface OracleInterface {\\n    function getPrice(address asset) external view returns (uint256);\\n}\\n\\ninterface ResilientOracleInterface is OracleInterface {\\n    function updatePrice(address vToken) external;\\n\\n    function updateAssetPrice(address asset) external;\\n\\n    function getUnderlyingPrice(address vToken) external view returns (uint256);\\n}\\n\\ninterface TwapInterface is OracleInterface {\\n    function updateTwap(address asset) external returns (uint256);\\n}\\n\\ninterface BoundValidatorInterface {\\n    function validatePriceWithAnchorPrice(\\n        address asset,\\n        uint256 reporterPrice,\\n        uint256 anchorPrice\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2432799b0d824fc701beb4c30146e912b9aeecf77b5c1635dde6c5fbe6bfc3a7\",\"license\":\"BSD-3-Clause\"},\"contracts/oracles/WstETHOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\nimport { OracleInterface } from \\\"../interfaces/OracleInterface.sol\\\";\\nimport { IStETH } from \\\"../interfaces/IStETH.sol\\\";\\nimport { ensureNonzeroAddress } from \\\"@venusprotocol/solidity-utilities/contracts/validators.sol\\\";\\nimport { EXP_SCALE } from \\\"@venusprotocol/solidity-utilities/contracts/constants.sol\\\";\\n\\n/**\\n * @title WstETHOracle\\n * @author Venus\\n * @notice Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH\\n *         or the price of stETH/USD (secondary market price) is obtained from the oracle.\\n */\\ncontract WstETHOracle is OracleInterface {\\n    /// @notice A flag assuming 1:1 price equivalence between stETH/ETH\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    bool public immutable ASSUME_STETH_ETH_EQUIVALENCE;\\n\\n    /// @notice Address of stETH\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    IStETH public immutable STETH;\\n\\n    /// @notice Address of wstETH\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public immutable WSTETH_ADDRESS;\\n\\n    /// @notice Address of WETH\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public immutable WETH_ADDRESS;\\n\\n    /// @notice Address of Resilient Oracle\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    OracleInterface public immutable RESILIENT_ORACLE;\\n\\n    /// @notice Constructor for the implementation contract.\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(\\n        address wstETHAddress,\\n        address wETHAddress,\\n        address stETHAddress,\\n        address resilientOracleAddress,\\n        bool assumeEquivalence\\n    ) {\\n        ensureNonzeroAddress(wstETHAddress);\\n        ensureNonzeroAddress(wETHAddress);\\n        ensureNonzeroAddress(stETHAddress);\\n        ensureNonzeroAddress(resilientOracleAddress);\\n        WSTETH_ADDRESS = wstETHAddress;\\n        WETH_ADDRESS = wETHAddress;\\n        STETH = IStETH(stETHAddress);\\n        RESILIENT_ORACLE = OracleInterface(resilientOracleAddress);\\n        ASSUME_STETH_ETH_EQUIVALENCE = assumeEquivalence;\\n    }\\n\\n    /**\\n     * @notice Gets the USD price of wstETH asset\\n     * @dev Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH\\n     *      or the price of stETH/USD (secondary market price) is obtained from the oracle\\n     * @param asset Address of wstETH\\n     * @return wstETH Price in USD scaled by 1e18\\n     */\\n    function getPrice(address asset) public view returns (uint256) {\\n        if (asset != WSTETH_ADDRESS) revert(\\\"wrong wstETH address\\\");\\n\\n        // get stETH amount for 1 wstETH scaled by 1e18\\n        uint256 stETHAmount = STETH.getPooledEthByShares(1 ether);\\n\\n        // price is scaled 1e18 (oracle returns 36 - asset decimal scale)\\n        uint256 stETHUSDPrice = RESILIENT_ORACLE.getPrice(ASSUME_STETH_ETH_EQUIVALENCE ? WETH_ADDRESS : address(STETH));\\n\\n        // stETHAmount (for 1 wstETH) * stETHUSDPrice / 1e18\\n        return (stETHAmount * stETHUSDPrice) / EXP_SCALE;\\n    }\\n}\\n\",\"keccak256\":\"0x3b6d494a7ec633d4b17afa53de270701bea1c4107f5955d449e0f4a619418638\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x61012060405234801561001157600080fd5b50604051610622380380610622833981016040819052610030916100c5565b6100398561007f565b6100428461007f565b61004b8361007f565b6100548261007f565b6001600160a01b0394851660c05292841660e05290831660a052909116610100521515608052610133565b6001600160a01b0381166100a6576040516342bcdf7f60e11b815260040160405180910390fd5b50565b80516001600160a01b03811681146100c057600080fd5b919050565b600080600080600060a086880312156100dd57600080fd5b6100e6866100a9565b94506100f4602087016100a9565b9350610102604087016100a9565b9250610110606087016100a9565b91506080860151801515811461012557600080fd5b809150509295509295909350565b60805160a05160c05160e0516101005161048461019e6000396000818160f8015261028f015260008181606c015261030901526000818160b0015261017c01526000818161011f0152818161021601526102e301526000818161014601526102be01526104846000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063040141e51461006757806336e6372f146100ab57806341976e09146100d2578063a4edcd4c146100f3578063e00bfe501461011a578063ed0142b714610141575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6100e56100e03660046103b8565b610178565b6040519081526020016100a2565b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020016100a2565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146101f65760405162461bcd60e51b815260206004820152601460248201527377726f6e6720777374455448206164647265737360601b604482015260640160405180910390fd5b604051630f451f7160e31b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637a28fb8890602401602060405180830381865afa158015610265573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028991906103e8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166341976e097f0000000000000000000000000000000000000000000000000000000000000000610307577f0000000000000000000000000000000000000000000000000000000000000000610329565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561036d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039191906103e8565b9050670de0b6b3a76400006103a68284610401565b6103b0919061042c565b949350505050565b6000602082840312156103ca57600080fd5b81356001600160a01b03811681146103e157600080fd5b9392505050565b6000602082840312156103fa57600080fd5b5051919050565b808202811582820484141761042657634e487b7160e01b600052601160045260246000fd5b92915050565b60008261044957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122052d8badca44e136cd59fe811208cea934c367c0e34f71a2a6788802f0f74eb4b64736f6c63430008190033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063040141e51461006757806336e6372f146100ab57806341976e09146100d2578063a4edcd4c146100f3578063e00bfe501461011a578063ed0142b714610141575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6100e56100e03660046103b8565b610178565b6040519081526020016100a2565b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020016100a2565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146101f65760405162461bcd60e51b815260206004820152601460248201527377726f6e6720777374455448206164647265737360601b604482015260640160405180910390fd5b604051630f451f7160e31b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637a28fb8890602401602060405180830381865afa158015610265573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028991906103e8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166341976e097f0000000000000000000000000000000000000000000000000000000000000000610307577f0000000000000000000000000000000000000000000000000000000000000000610329565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561036d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039191906103e8565b9050670de0b6b3a76400006103a68284610401565b6103b0919061042c565b949350505050565b6000602082840312156103ca57600080fd5b81356001600160a01b03811681146103e157600080fd5b9392505050565b6000602082840312156103fa57600080fd5b5051919050565b808202811582820484141761042657634e487b7160e01b600052601160045260246000fd5b92915050565b60008261044957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122052d8badca44e136cd59fe811208cea934c367c0e34f71a2a6788802f0f74eb4b64736f6c63430008190033",
  "devdoc": {
    "author": "Venus",
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "getPrice(address)": {
        "details": "Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH      or the price of stETH/USD (secondary market price) is obtained from the oracle",
        "params": {
          "asset": "Address of wstETH"
        },
        "returns": {
          "_0": "wstETH Price in USD scaled by 1e18"
        }
      }
    },
    "stateVariables": {
      "ASSUME_STETH_ETH_EQUIVALENCE": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "RESILIENT_ORACLE": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "STETH": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "WETH_ADDRESS": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "WSTETH_ADDRESS": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      }
    },
    "title": "WstETHOracle",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Thrown if the supplied address is a zero address where it is not allowed"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "ASSUME_STETH_ETH_EQUIVALENCE()": {
        "notice": "A flag assuming 1:1 price equivalence between stETH/ETH"
      },
      "RESILIENT_ORACLE()": {
        "notice": "Address of Resilient Oracle"
      },
      "STETH()": {
        "notice": "Address of stETH"
      },
      "WETH_ADDRESS()": {
        "notice": "Address of WETH"
      },
      "WSTETH_ADDRESS()": {
        "notice": "Address of wstETH"
      },
      "constructor": {
        "notice": "Constructor for the implementation contract."
      },
      "getPrice(address)": {
        "notice": "Gets the USD price of wstETH asset"
      }
    },
    "notice": "Depending on the equivalence flag price is either based on assumption that 1 stETH = 1 ETH         or the price of stETH/USD (secondary market price) is obtained from the oracle.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}